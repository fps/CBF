if(NOT CBF_CONFIG_PROCESSED)
    set(CBF_CONFIG_PROCESSED TRUE)

    get_filename_component(CBF_CONFIG_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
    
    # Expose CBF library as an imported target (from the point of view
    # of the downstream project)
    include("${CBF_CONFIG_DIR}/CBFDepends.cmake")
    set(CBF_LIBRARY_DIR "${CBF_CONFIG_DIR}/../../lib")
    set(CBF_LIBRARIES "@CBF_LIBRARY_NAME@;@CBF_LIBRARY_NAME@_schemas")
    
    set(CBF_FOUND TRUE)
    set(CBF_INCLUDE_DIRS "${CBF_CONFIG_DIR}/../../include/@CBF_PATH_PREFIX@")
    set(CBF_RUNTIME_LIBRARY_DIRS "${CBF_CONFIG_DIR}/../../bin")
    set(CBF_VERSION "@CBF_VERSION@")
    set(CBF_DEFINITIONS "@CBF_DEFINITIONS@")

    # In order to resolve Qt5 link targets (Qt5::Concurrent) we need to import Qt
    if (@Qt5Core_FOUND@)
      find_package(Qt5Core)
      find_package(Qt5Concurrent)
      find_package(Qt5Gui)
      find_package(Qt5Widgets)
      find_package(Qt5OpenGL)
    endif()
endif()
